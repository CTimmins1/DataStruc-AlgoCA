
import javax.swing.JOptionPane;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author CamaraAdmin
 */
public class MyMusicAppGUI extends javax.swing.JFrame {

    private MyLinkedList linkedList;

    /**
     * Creates new form MyMusicAppGUI
     */
    public MyMusicAppGUI() {
        initComponents();
        //linking my seperate linkedlist class to be able to pull from in the GUI
        linkedList = new MyLinkedList();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        songLabel = new javax.swing.JLabel();
        songtxt = new javax.swing.JTextField();
        genreLabel = new javax.swing.JLabel();
        genretxt = new javax.swing.JTextField();
        addBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        delBtn = new javax.swing.JButton();
        shufBtn = new javax.swing.JButton();
        eraseBtn = new javax.swing.JButton();
        listABtn = new javax.swing.JButton();
        listBBtn = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        playlistTxt = new javax.swing.JTextArea();
        displayPopBtn = new javax.swing.JButton();
        displayRapBtn = new javax.swing.JButton();
        eraseRap = new javax.swing.JButton();
        erasePop = new javax.swing.JButton();
        welcomeLbl = new javax.swing.JLabel();
        backgroundimg = new javax.swing.JLabel();
        searchTxt = new javax.swing.JTextField();
        searchBtn = new javax.swing.JButton();
        upBtn = new javax.swing.JButton();
        downBtn = new javax.swing.JButton();
        deleteSearchBtn = new javax.swing.JButton();
        repeatBtn = new javax.swing.JButton();
        clearPlaylist = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        saveBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        songLabel.setText("Song Name:");
        getContentPane().add(songLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, -1, -1));

        songtxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                songtxtActionPerformed(evt);
            }
        });
        getContentPane().add(songtxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 50, 112, -1));

        genreLabel.setText("Song Genre:");
        getContentPane().add(genreLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, -1, -1));
        getContentPane().add(genretxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 80, 110, -1));

        addBtn.setText("Add to liked Songs");
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });
        getContentPane().add(addBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 150, 130, -1));

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 152, 300, 150));

        delBtn.setText("Delete Song");
        delBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delBtnActionPerformed(evt);
            }
        });
        getContentPane().add(delBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 190, 130, -1));

        shufBtn.setText("Shuffle List");
        shufBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                shufBtnActionPerformed(evt);
            }
        });
        getContentPane().add(shufBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 270, 130, -1));

        eraseBtn.setText("Erase List");
        eraseBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eraseBtnActionPerformed(evt);
            }
        });
        getContentPane().add(eraseBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 230, 130, -1));

        listABtn.setText("Add to Rap Playlist");
        listABtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listABtnActionPerformed(evt);
            }
        });
        getContentPane().add(listABtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 430, 134, -1));

        listBBtn.setText("Add to Pop Playlist");
        listBBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listBBtnActionPerformed(evt);
            }
        });
        getContentPane().add(listBBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 350, 130, -1));

        playlistTxt.setColumns(20);
        playlistTxt.setRows(5);
        jScrollPane2.setViewportView(playlistTxt);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(168, 389, 370, 150));

        displayPopBtn.setText("Display Pop Playlist");
        displayPopBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayPopBtnActionPerformed(evt);
            }
        });
        getContentPane().add(displayPopBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 390, 130, -1));

        displayRapBtn.setText("Display Rap Playlist");
        displayRapBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayRapBtnActionPerformed(evt);
            }
        });
        getContentPane().add(displayRapBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 460, 134, -1));

        eraseRap.setText("Clear Rap");
        eraseRap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eraseRapActionPerformed(evt);
            }
        });
        getContentPane().add(eraseRap, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 300, -1, -1));

        erasePop.setText("Clear Pop");
        erasePop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                erasePopActionPerformed(evt);
            }
        });
        getContentPane().add(erasePop, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 300, -1, -1));

        welcomeLbl.setBackground(new java.awt.Color(0, 0, 102));
        welcomeLbl.setForeground(new java.awt.Color(0, 0, 0));
        welcomeLbl.setText("Welcome to Spoofify Rap & Pop.");
        getContentPane().add(welcomeLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 15, 190, 30));

        backgroundimg.setIcon(new javax.swing.ImageIcon("C:\\Users\\CamaraAdmin\\Desktop\\backgroung.jpg")); // NOI18N
        backgroundimg.setText("jLabel2");
        getContentPane().add(backgroundimg, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 0, 210, 110));

        searchTxt.setText("Search by Name...");
        getContentPane().add(searchTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 330, 150, -1));

        searchBtn.setText("Search");
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });
        getContentPane().add(searchBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 360, -1, -1));

        upBtn.setText("Move Up");
        upBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                upBtnActionPerformed(evt);
            }
        });
        getContentPane().add(upBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 330, 90, -1));

        downBtn.setText("Move Down");
        downBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                downBtnActionPerformed(evt);
            }
        });
        getContentPane().add(downBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 360, -1, -1));

        deleteSearchBtn.setText("Delete");
        deleteSearchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteSearchBtnActionPerformed(evt);
            }
        });
        getContentPane().add(deleteSearchBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 360, -1, -1));

        repeatBtn.setText("Repeat Playlist");
        repeatBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                repeatBtnActionPerformed(evt);
            }
        });
        getContentPane().add(repeatBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 330, -1, -1));

        clearPlaylist.setText("Clear Playlists");
        clearPlaylist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearPlaylistActionPerformed(evt);
            }
        });
        getContentPane().add(clearPlaylist, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 500, 130, -1));

        jLabel1.setText("Liked Songs:");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, 120, -1));

        saveBtn.setText("Save Playlist");
        saveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBtnActionPerformed(evt);
            }
        });
        getContentPane().add(saveBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 360, 100, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void delBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delBtnActionPerformed
        // TODO add your handling code here:
        linkedList.removeFirstSong();
        updateSongList();
    }//GEN-LAST:event_delBtnActionPerformed

    private void songtxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_songtxtActionPerformed
        // TODO add your handling code here:


    }//GEN-LAST:event_songtxtActionPerformed

    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed
        // TODO add your handling code here:
        String song = songtxt.getText();
        String genre = genretxt.getText();
        linkedList.addSong(song, genre);
        updateSongList();
    }

    private void updateSongList() {
        jTextArea1.setText(linkedList.getListAsString());
    }

    private void updatePlaylist() {
        //clears the text that is there if any.More of quality touch.
        playlistTxt.setText("");
        playlistTxt.append(linkedList.getListAsString());
    }//GEN-LAST:event_addBtnActionPerformed

    private void shufBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_shufBtnActionPerformed
        // TODO add your handling code here:
        linkedList.shuffleSongs();
        updateSongList();
    }//GEN-LAST:event_shufBtnActionPerformed

    private void eraseBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eraseBtnActionPerformed
        // TODO add your handling code here:
        linkedList.eraseAllSongs();
        updateSongList();
    }//GEN-LAST:event_eraseBtnActionPerformed

    private void listBBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listBBtnActionPerformed
        // TODO add your handling code here:
        String song = songtxt.getText();
        String genre = genretxt.getText();
        linkedList.addSong(song, genre);
        updatePlaylist();
    }//GEN-LAST:event_listBBtnActionPerformed

    private void erasePopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_erasePopActionPerformed
        jTextArea1.setText("");
        linkedList.clearPlaylist("pop");
        updateSongList();
    }//GEN-LAST:event_erasePopActionPerformed

    private void listABtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listABtnActionPerformed
        // TODO add your handling code here:
        //add the latest song to the Rap playlist
        String song = songtxt.getText();
        String genre = genretxt.getText();
        linkedList.addSong(song, genre);
        updatePlaylist();

    }//GEN-LAST:event_listABtnActionPerformed

    private void displayPopBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayPopBtnActionPerformed
        // TODO add your handling code here:
        //first i have to celar the playlist text area by setting the text to ""
        playlistTxt.setText("");
        //now to display the songs with genre "pop" from the playlist
        for (String song : linkedList.getPopList()) {
            playlistTxt.append("Song: " + song + ", Genre: Pop\n");
        }
    }//GEN-LAST:event_displayPopBtnActionPerformed

    private void displayRapBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayRapBtnActionPerformed
        // TODO add your handling code here:
        playlistTxt.setText(" ");
        for (String song : linkedList.getRapList()) {
            playlistTxt.append("Song: " + song + ", Genre: Rap\n");
        }
    }//GEN-LAST:event_displayRapBtnActionPerformed

    private void eraseRapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eraseRapActionPerformed
        jTextArea1.setText("");
        linkedList.clearPlaylist("rap");
        updateSongList();
    }//GEN-LAST:event_eraseRapActionPerformed

    private void repeatBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_repeatBtnActionPerformed
        // TODO add your handling code here:
        // if(genre.euqals("pop")){
        //to repeat the pop playlist
        //   for(String song:popList){
        
       //clear area
       playlistTxt.setText("");
       //display the songs from their arrays
         String[] popPlaylist = linkedList.getPlaylists()[0];
        String[] rapPlaylist = linkedList.getPlaylists()[1];
        //displays the pop playlist
    playlistTxt.append("Pop Playlist:\n");
    for (String song : popPlaylist) {
        playlistTxt.append(song + "\n");
    }
//displays the rap playlist
    playlistTxt.append("\nRap Playlist:\n");
    for (String song : rapPlaylist) {
        playlistTxt.append(song + "\n");
    }
        
    }//GEN-LAST:event_repeatBtnActionPerformed

    private void clearPlaylistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearPlaylistActionPerformed
        // TODO add your handling code here:
        //clear the pop playlist
        linkedList.clearPlaylistStack();
        updatePlaylist();
    }//GEN-LAST:event_clearPlaylistActionPerformed
    private String searchSongs(String searchText) {
        StringBuilder searchResult = new StringBuilder();

        for (String song : linkedList.getAllSongs()) {
            if (song.toLowerCase().contains(searchText)) { // Check if the song contains the search text
                searchResult.append(song).append("\n");
            }
        }
        return searchResult.toString();

    }
    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
        // TODO add your handling code here:
        String searchText = searchTxt.getText().toLowerCase();
        String searchResult = searchSongs(searchText);
        playlistTxt.setText(searchResult);

    }//GEN-LAST:event_searchBtnActionPerformed

    private void deleteSearchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteSearchBtnActionPerformed
        // Get the name of the song to delete from a text field or other component
        String songToDelete = searchTxt.getText(); //gets text from where user can enter song
        //removes the specified song from the stack
        String deletedSong = linkedList.popSong(songToDelete);

        //updates the song list display
        updateSongList();
        updatePlaylist();

        //displays a message to indicate which song was deleted
        JOptionPane.showMessageDialog(null, "Deleted song: " + deletedSong);

    }//GEN-LAST:event_deleteSearchBtnActionPerformed

    private void upBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_upBtnActionPerformed
        // TODO add your handling code here:
        linkedList.moveUp("rap");
        linkedList.moveUp("pop");
        updatePlaylist();

    }//GEN-LAST:event_upBtnActionPerformed

    private void downBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_downBtnActionPerformed
        // TODO add your handling code here:
        linkedList.moveDown("rap");
        linkedList.moveDown("pop");
        updatePlaylist();
    }//GEN-LAST:event_downBtnActionPerformed

    private void saveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBtnActionPerformed
//Save the playlists to the arrays
        String[] popArray = linkedList.getPopList().toArray(new String[0]);
        String[] rapArray = linkedList.getRapList().toArray(new String[0]);

        // Update the playlists array in your linkedList instance
        linkedList.setPlaylists(new String[][]{popArray, rapArray});

        // Display a message indicating that the playlist has been saved
        JOptionPane.showMessageDialog(null, "Playlist saved successfully.");


    }//GEN-LAST:event_saveBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MyMusicAppGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MyMusicAppGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MyMusicAppGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MyMusicAppGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MyMusicAppGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBtn;
    private javax.swing.JLabel backgroundimg;
    private javax.swing.JButton clearPlaylist;
    private javax.swing.JButton delBtn;
    private javax.swing.JButton deleteSearchBtn;
    private javax.swing.JButton displayPopBtn;
    private javax.swing.JButton displayRapBtn;
    private javax.swing.JButton downBtn;
    private javax.swing.JButton eraseBtn;
    private javax.swing.JButton erasePop;
    private javax.swing.JButton eraseRap;
    private javax.swing.JLabel genreLabel;
    private javax.swing.JTextField genretxt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JButton listABtn;
    private javax.swing.JButton listBBtn;
    private javax.swing.JTextArea playlistTxt;
    private javax.swing.JButton repeatBtn;
    private javax.swing.JButton saveBtn;
    private javax.swing.JButton searchBtn;
    private javax.swing.JTextField searchTxt;
    private javax.swing.JButton shufBtn;
    private javax.swing.JLabel songLabel;
    private javax.swing.JTextField songtxt;
    private javax.swing.JButton upBtn;
    private javax.swing.JLabel welcomeLbl;
    // End of variables declaration//GEN-END:variables
}
